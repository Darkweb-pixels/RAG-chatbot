{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zexa\\\\Downloads\\\\Rag_Chatbot-main\\\\Rag_Chatbot-main\\\\rag\\\\react-chatbot\\\\src\\\\components\\\\Message.js\";\nimport React from 'react';\nimport './Message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = ({\n  content,\n  sender,\n  isError\n}) => {\n  const messageClass = sender === 'user' ? 'user-message' : 'bot-message';\n  const errorClass = isError ? 'error-message' : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${messageClass} ${errorClass}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-avatar\",\n      children: sender === 'user' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"avatar-icon user-icon\",\n        children: \"\\uD83D\\uDC64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"avatar-icon bot-icon\",\n        children: \"\\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: content.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [line, i !== content.split('\\n').length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 54\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Message","content","sender","isError","messageClass","errorClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","split","map","line","i","Fragment","length","_c","$RefreshReg$"],"sources":["C:/Users/Zexa/Downloads/Rag_Chatbot-main/Rag_Chatbot-main/rag/react-chatbot/src/components/Message.js"],"sourcesContent":["import React from 'react';\r\nimport './Message.css';\r\n\r\nconst Message = ({ content, sender, isError }) => {\r\n  const messageClass = sender === 'user' ? 'user-message' : 'bot-message';\r\n  const errorClass = isError ? 'error-message' : '';\r\n  \r\n  return (\r\n    <div className={`message ${messageClass} ${errorClass}`}>\r\n      <div className=\"message-avatar\">\r\n        {sender === 'user' ? (\r\n          <span className=\"avatar-icon user-icon\">ðŸ‘¤</span>\r\n        ) : (\r\n          <span className=\"avatar-icon bot-icon\">ðŸ¤–</span>\r\n        )}\r\n      </div>\r\n      <div className=\"message-content\">\r\n        {content.split('\\n').map((line, i) => (\r\n          <React.Fragment key={i}>\r\n            {line}\r\n            {i !== content.split('\\n').length - 1 && <br />}\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAChD,MAAMC,YAAY,GAAGF,MAAM,KAAK,MAAM,GAAG,cAAc,GAAG,aAAa;EACvE,MAAMG,UAAU,GAAGF,OAAO,GAAG,eAAe,GAAG,EAAE;EAEjD,oBACEJ,OAAA;IAAKO,SAAS,EAAE,WAAWF,YAAY,IAAIC,UAAU,EAAG;IAAAE,QAAA,gBACtDR,OAAA;MAAKO,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BL,MAAM,KAAK,MAAM,gBAChBH,OAAA;QAAMO,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,gBAEjDZ,OAAA;QAAMO,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAChD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNZ,OAAA;MAAKO,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BN,OAAO,CAACW,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC/BhB,OAAA,CAACF,KAAK,CAACmB,QAAQ;QAAAT,QAAA,GACZO,IAAI,EACJC,CAAC,KAAKd,OAAO,CAACW,KAAK,CAAC,IAAI,CAAC,CAACK,MAAM,GAAG,CAAC,iBAAIlB,OAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAF5BI,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GAvBIlB,OAAO;AAyBb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}